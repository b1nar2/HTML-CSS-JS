<hr 문답>

-- 사원정보에 관한 모든 항목을 출력하십시오.

​

SELECT * FROM EMPLOYEES;

​

​

-- 사원명(함자:첫이름)이 Steven 이라는 사람의 모든 사원정보 항목을 출력하십시오. 

​

SELECT * FROM EMPLOYEES
WHERE first_name = 'Steven';

​

​

-- 사원정보 테이블 항목 현황 조회 (sqlplus / sql developer)

​

DESC[RIBE] employees;

​

​

--  사원명이 Steven 인 직원의 이름(성/함 모두)을 출력하십시오.

​

SELECT first_name || ' ' || last_name FROM employees
WHERE first_name = 'Steven';

​

​

-- 위의 질의(query)에서 "이름"이라는 별칭(alias)를 첨가하여 출력하십시오.

-- 참고) 문자열 연결 연산자에 유의 !

​

SELECT first_name || ' ' || last_name AS "이름" FROM employees
WHERE first_name = 'Steven';

​

​

-- Steven 사원의 급여에 10000 달러를 추가하여 "10000 달러 인상분"이라는 별칭으로 

-- 출력하십시오.

​

SELECT salary+10000 "10000달러 인상분" FROM employees
WHERE first_name = 'Steven';

​

​

-- 사원 현황에서 첫 이름(함)만을 중복없이 출력하십시오.

​

SELECT DISTINCT first_name FROM employees;

​

​

-- 사원 아이디가 150 보다 큰 직원의 이름을 "이름"이라는 별칭을 이용하여 출력하십시오.

​

SELECT first_name || ' ' || last_name "이름" FROM employees
WHERE employee_id > 150;

​

​

-- 사원 아이디가 150 ~ 170 인 사원의 첫 이름을 출력하십시오.

​

SELECT first_name || ' ' || last_name "이름" FROM employees
WHERE employee_id >= 150 AND employee_id <= 170;

​

-- 사원명이 "D"로 시작하는 직원의 첫 이름을 출력하십시오. (유사 검색)

​

SELECT first_name FROM employees
WHERE first_name LIKE 'D%';

​

-- 사원명이 "D"로 시작하는 직원의 첫 이름을 출력하십시오. (동일 검색) 

​

SELECT first_name FROM employees
WHERE first_name = 'D%';  -- 결과 없음 !

​

​

-- 사원 아이디가 150 ~ 170 사이인 직원들의 이메일 현황을 출력하십시오.

​

SELECT email "이메일" FROM employees
WHERE employee_id >= 150 AND employee_id <= 170;

​

SELECT email "이메일" FROM employees
WHERE employee_id BETWEEN 150 AND 170;



///////////////////////////////////////////////////////////////

<정렬>


1. 사원 아이디가 200 이상인 사원들의 모든 정보를 아이디를 중심으로 오름차순 정렬하여 출력하십시오.

​

SELECT * FROM employees
WHERE employee_id >= 200
ORDER BY employee_id ASC;

​

​

2. 사원 아이디가 200 이상인 사원들의 모든 정보를 아이디를 중심으로 내림차순 정렬하여 출력하십시오.

​

SELECT * FROM employees
WHERE employee_id >= 200
ORDER BY employee_id DESC;

​

​

3. 사원 아이디가 200 이상인 사원들의 모든 정보를 첫 이름(함자)을 중심으로 오름차순 정렬하여 출력하십시오.

​

SELECT * FROM employees
WHERE employee_id >= 200
ORDER BY first_name ASC;

​

​

4. 사원 아이디가 200 이상인 사원들의 모든 정보를 이름과 급여를 기준으로 오름차순 정렬하여 출력하십시오.

​

SELECT * FROM employees
WHERE employee_id >= 200
ORDER BY first_name, salary ASC; 

​

참고)  위와 같은 경우는 다중 정렬이 그다지 특별한 효과가 없음.

​

참고) 위와 동일한 결과의 구문으로서 1, 2 의 의미는 언급된 컬럼(필드) 순서

​

SELECT * FROM employees
WHERE employee_id >= 200
ORDER BY 1, 2 ASC; 

 

​

5. 관리자 아이디, 이름, 급여 정보를 관리자 아이디와 급여를 기준으로 오름차순으로 정렬하여 출력하십시오.

​

SELECT manager_id, first_name, salary 
FROM employees
ORDER BY manager_id, salary ASC;  

​

참고) 다중 정렬이 유효한 경우

​

Tip) "공통 분모"에 해당되는 필드를 앞세워서 정렬(sorting)하는 것이 바람직합니다.